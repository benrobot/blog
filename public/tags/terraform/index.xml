<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Terraform on MediaGlasses</title>
    <link>https://www.mediaglasses.blog/tags/terraform/</link>
    <description>Recent content in Terraform on MediaGlasses</description>
    <image>
      <url>https://www.mediaglasses.blog/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://www.mediaglasses.blog/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 08 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.mediaglasses.blog/tags/terraform/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure DevOps Terraform Pipeline  with Checkov &amp; Approvals</title>
      <link>https://www.mediaglasses.blog/2021/06/08/azure-devops-terraform-pipeline-with-checkov-approvals/</link>
      <pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.mediaglasses.blog/2021/06/08/azure-devops-terraform-pipeline-with-checkov-approvals/</guid>
      <description>It’s been just over a year since I first posted about the Azure DevOps Terraform Pipeline I used to use, I say used to use, because that pipeline is now a little outdated. This posts covers the updated Pipeline I am starting to deploy along side my Terraform code.
Pipeline Overview The pipeline itself has expanded a little and it now not only uses stages but also depending what Terraform is planning on doing it will trigger a manual approval process should there be any resources being destroyed.</description>
    </item>
    
    <item>
      <title>GitHub Codespaces and Terraform</title>
      <link>https://www.mediaglasses.blog/2020/09/20/github-codespaces-and-terraform/</link>
      <pubDate>Sun, 20 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.mediaglasses.blog/2020/09/20/github-codespaces-and-terraform/</guid>
      <description>I got my invite for GitHub Codespaces the other day and I thought I would have a quick play with it as having an an online IDE sounds like it could come in handy.
If you know me — you will know that I am not a developer, but I do a lot of work in Visual Studio Code as that is where I tend to develop work on a lot of the infrastructure as code projects using Terraform and Ansible, as well as Docker projects.</description>
    </item>
    
    <item>
      <title>Azure DevOps Terraform Pipeline</title>
      <link>https://www.mediaglasses.blog/2020/05/31/azure-devops-terraform-pipeline/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.mediaglasses.blog/2020/05/31/azure-devops-terraform-pipeline/</guid>
      <description>In my last post I wrote about how I created an Azure DevOps pipeline using Ansible in a more “Terraform” way, however, although I have used Terraform and Azure DevOps quite a bit I realised I didn’t really have a template for a pipeline.
Before we look at the pipeline itself I should point out that is uses the the Terraform Azure Pipeline extension by Microsoft DevLabs from the Visual Studio Marketplace, if you are following along with this post please ensure that the extension is installed in your organisation before proceeding.</description>
    </item>
    
  </channel>
</rss>
